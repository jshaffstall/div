{"name":"Div PHP Template Engine","tagline":"Everything in a single class in one file!","body":"﻿---------------------------------------\r\n[[]] Div PHP Template Engine 4.8\r\n---------------------------------------\r\nby Rafa Rodríguez (rafacuba2015@gmail.com)\r\n\r\nDiv is a template engine for PHP developed by the Eng. Rafa Rodriguez in 2011, \r\nthat allows the separation of labor between the programmer and the designer. \r\nAs the designer built templates with some specific tags, the programmer uses \r\nthe template to replace these tags with the information. Div have a compact \r\na descriptive syntax for template's designers.\r\n\t\r\nOf course, the replacement of tags is a basic functionality. More extensions \r\nof the substitutions exist, for example, replace repeatedly N times, replace \r\nconditionally, among others.\r\n\t\r\nThe programmer creates an instance of a class with 2 parameters: the first \r\nis the designer's code or name of the file that he built, and the second is \r\nthe information represented by an array, objects, or a combination of arrays \r\nand objects to replace the design's tags. The array's indexes, array's keys \r\nand object's properties must correspond with the design's tags.\r\n\t\r\nThe designer work in text files and use various types of tags: simple \r\nreplacements, lists or loops, iterations, conditional parts, separating the \r\ndesign into different files, default replacements, and so on.\r\n\t\r\nThe syntax of Div is very compact. If the programmer wants to do a loop, the \r\ndesigner only needs to know a name for that loop, and if he wants to hide a \r\npart of the GUI, the designer is only responsible for tag the part that will \r\nbe hidden or displayed conditionally.\r\n\r\nReasons? Div is developed with the philosophy of the knowledge reused. \r\nOf course, Div is released in time of recognized template engines that are \r\nwidely used. For this reason, Div develop a minimum new knowledge so that \r\nthe developers can quickly become familiar with this engine and they can \r\nunderstand when, how and why to use it.\r\n\r\nThe features are added if it is really necessary. That is, if there is a need \r\nto add another functionality, we first analyzed whether there is a mechanism \r\nto resolve this functionality, and then we publish an article that explains \r\nhow to implement this mechanism.\r\n\t\r\nThe argument to develop Div was obtained from various tests with PHP and we \r\nconcluded that it is faster replace the portions of string than includes of \r\nPHP scripts.\r\n\r\nThe fact remains, that the replacement of substrings is a fast process but \r\nit require more memory. However, this consumption is so small that it is \r\nworthwhile the sacrifice.\r\n\t\r\nDiv development is to avoid creating a cache system because we believe that \r\nit is unnecessary according\tto their characteristics as an engine. A learning \r\nsystem can be sufficient: it can prevent the repeated processing of the same \r\ntemplates.\r\n\t\r\nFinally, it is known that the most popular engines are composed of more than \r\none file, classes and libraries. Div sought since its inception, the \r\nimplementation of everything in one class, in a single file. This allows easy \r\nadaptation to existing development platforms.\r\n\r\nGoals? One class, one file!, considering the template like an object, \r\ncreate a minimum of highly descriptive syntax, avoid a cache system, improve \r\nthe algorithms, reuse the knowledge, write mechanisms and extend!.\r\n\t\r\nPossibilities for the designer? The designer carries out its work in text \r\nfiles and then the designer can use different tags. Div does not provide for \r\nthe design obtrusive code. All that is programmed in the templates has a single \r\ngoal: design.\r\n\r\nPossibilities for the programmer? The programmer creates an instance of div \r\nclass, specifying in its constructor, the template\tcreated by the designer \r\nand the information that will be displayed.\r\n\t\r\nFor more information visit our site http://divengine.com and\r\nthe documentation div.html or https://github.com/rrodriguezr/div/wiki\r\n\r\nEnjoy!\r\n\r\nrafa","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}